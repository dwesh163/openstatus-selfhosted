name: Build and Push Docker Images

on:
  schedule:
    # Build every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  push:
    branches: [main]
    paths:
      - 'dockerfiles/**'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches: [main]
    paths:
      - 'dockerfiles/**'
  workflow_dispatch:
    inputs:
      openstatus_branch:
        description: 'OpenStatus branch to build from'
        required: false
        default: 'main'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/openstatus

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        service:
          - name: server
            dockerfile: dockerfiles/Dockerfile.server
            platforms: linux/amd64,linux/arm64
          - name: workflows
            dockerfile: dockerfiles/Dockerfile.workflows
            platforms: linux/amd64,linux/arm64
          - name: web
            dockerfile: dockerfiles/Dockerfile.web
            platforms: linux/amd64,linux/arm64
          - name: dashboard
            dockerfile: dockerfiles/Dockerfile.dashboard
            platforms: linux/amd64,linux/arm64
          - name: screenshot-service
            dockerfile: dockerfiles/Dockerfile.screenshot-service
            platforms: linux/amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service.name }}
          tags: |
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.service.dockerfile }}
          platforms: ${{ matrix.service.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OPENSTATUS_BRANCH=${{ inputs.openstatus_branch || 'main' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate image summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "Service: **${{ matrix.service.name }}**" >> $GITHUB_STEP_SUMMARY
          echo "### Tags:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "### Pull Command:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service.name }}:latest" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  update-compose:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update docker-compose.yml with new image tags
        run: |
          # Update image tags in docker-compose.yml with current date
          DATE_TAG=$(date +%Y-%m-%d)
          sed -i "s|ghcr.io/${{ github.repository_owner }}/openstatus-.*:.*|ghcr.io/${{ github.repository_owner }}/openstatus-\${SERVICE}:${DATE_TAG}|g" docker-compose.yml || true

      - name: Commit updated docker-compose.yml
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git diff --quiet docker-compose.yml; then
            echo "No changes to commit"
          else
            git add docker-compose.yml
            git commit -m "[chore] update docker images to $(date +%Y-%m-%d)"
            git push
          fi

  security-scan:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    strategy:
      matrix:
        service: [server, workflows, web, dashboard, screenshot-service]

    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.service }}.sarif'
